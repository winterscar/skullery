{:enums {:Measurement {:description "The dimension being measured"
                       :values [{:enum-value :MASS :description "The weight of something, stored in grams."}
                                {:enum-value :VOLUME :description "The volume of something, stored in cm3"}
                                {:enum-value :LENGTH :description "The length of something, often of regular dimensions, such as ginger, stored in cm."}
                                {:enum-value :UNIT :description "A discreet amount of something, such as a clove of garlic, or an onion."}]}}
 :objects {:PageInfo {:description "Metadata about the current page in a paginated list of results."
                      :fields {:previous_page {:type String
                                               :description "An opaque value that can be passed
                                                    to the subsequent query to get the results that
                                                    preceed this page, if any.
                                                    You *must* discard this token if you change
                                                    the query filters or sort order."}
                               :next_page {:type String
                                           :description "An opaque value that can be passed
                                                to the subsequent query to get the results that
                                                follow this page, if any.
                                                You *must* discard this token if you change
                                                the query filters or sort order."}}}
           :Ingredient {:description "An ingredient."
                        :fields {:id {:type Int}
                                 :name {:type (non-null String)}
                                 :unit_name {:type String}
                                 :unit_name_plural {:type String}
                                 :conversions {:type (list :Conversion)
                                               :resolve :resolve-conversions}}}
           :Conversion {:description "A mapping from one measurement system to another, such as mass -> volume.
                                      There may be multiple mappings with the same to and from fields, provided the
                                      note is different."
                        :fields {:id {:type Int}
                                 :from {:type :Measurement}
                                 :to {:type :Measurement}
                                 :from_note {:type String
                                             :description "A note about the conversion process, such as 'loosly packed'.
                                                      Displayed when a unit is converted to the 'from' unit. 
                                                      (conversions can be used in both directions)."}
                                 :to_note {:type String
                                           :description "A note about the conversion process, such as 'finely chopped'.
                                                      Displayed when a unit is converted to the 'to' unit."}
                                 :multiplier {:type Float}}}
           :RecipeIngredient {:description "An instance of an ingredient, as used in a recipe."
                              :fields {:id {:type Int}
                                       :ingredient {:type :Ingredient}
                                       :quantity {:type Float}
                                       :unit {:type :Measurement}}}
           :Step {:description "A set of grouped instructions, that collectively form a recipe."
                  :fields {:id {:type Int}
                           :name {:type (non-null String)}
                           :body {:type String}
                           :order {:type Int}
                           :ingredients {:description "The ingredients used by this step, and their relevant quantities."
                                         :type (list :RecipeIngredient)
                                         :resolve :resolve-step-ingredients}}}
           :Equipment {:description "A tool or non-consumable item needed for a recipe."
                       :fields {:id {:type Int}
                                :name {:type (non-null String)}}}
           :Recipe {:description "A collection of steps, tools and ingredients required to produce a dish."
                    :fields {:id {:type Int}
                             :name {:type (non-null String)}
                             :steps {:type (list :Step)
                                     :resolve :resolve-steps}
                             :ingredients {:type (list :RecipeIngredient)
                                           :resolve :resolve-recipe-ingredients}
                             :equipment {:type (list :Equipment)
                                         :resolve :resolve-recipe-equipment}}}
           :RecipesResult {:description "A paginated list of recipes and associated metadata."
                           :fields {:values {:type (list :Recipe)}
                                    :page_info {:type (non-null :PageInfo)}
                                    :total_count {:type (non-null Int)}}}
           :IngredientsResult {:description "A paginated list of ingredients and associated metadata."
                               :fields {:values {:type (list :Ingredient)}
                                        :page_info {:type (non-null :PageInfo)}
                                        :total_count {:type (non-null Int)}}}
           :EquipmentResult {:description "A paginated list of equipment and associated metadata."
                               :fields {:values {:type (list :Equipment)}
                                        :page_info {:type (non-null :PageInfo)}
                                        :total_count {:type (non-null Int)}}}}
 :queries {:recipe {:type :Recipe
                    :resolve :resolve-recipe
                    :args {:id {:type (non-null Int)}}}
           :recipes {:type :RecipesResult
                     :resolve :resolve-recipes
                     :args {:filter {:type :RecipesFilterQueryInput}
                            :page {:description "An optional previous_page or next_page value,
                                                 as returned by the PageInfo object on a paginated query."
                                   :type String}}}
           :ingredients {:type :IngredientsResult
                         :resolve :resolve-ingredients
                         :args {:page {:description "An optional previous_page or next_page value,
                                                 as returned by the PageInfo object on a paginated query."
                                       :type String}}}
           :equipment {:type :EquipmentResult
                       :resolve :resolve-equipment
                       :args {:page {:description "An optional previous_page or next_page value,
                                                 as returned by the PageInfo object on a paginated query."
                                     :type String}}}}
 :input-objects {:RecipesFilterQueryInput {:fields {:search_query {:type String}}}
                 :RecipeIngredientInput {:fields {:ingredient_id {:type Int}
                                                  :quantity {:type Float}
                                                  :unit {:type :Measurement}}}
                 :RecipeEquipmentInput {:fields {:equipment_id {:type Int}}}
                 :StepIngredientInput {:fields {:ingredient_id {:type Int}
                                                :quantity {:type Float}}}
                 :StepInput {:fields {:name {:type String}
                                      :body {:type String}
                                      :ingredients {:type (list :StepIngredientInput)}}}}
 :mutations {:add_recipe {:type :Recipe
                          :description "Creates a new recipe, along with associated ingredients and steps."
                          :args {:name {:type String}
                                 :ingredients {:type (list :RecipeIngredientInput)}
                                 :equipment   {:type (list :RecipeEquipmentInput)}
                                 :steps {:type (list :StepInput)}}
                          :resolve :mutation-add-recipe}
             :add_ingredient {:type :Ingredient
                               :description "Creates a new ingredient."
                               :args {:name {:type (non-null String)}
                                      :unit_name {:type String
                                                  :description "The name of one of this ingredient. For example,
                                                                the unit name for garlic would be 'clove', and
                                                                the unit name for ontion would be 'onion'.
                                                                Some ingredients have no concept of 'unit', in
                                                                which case this field should be left blank."}
                                      :unit_name_plural {:type String
                                                         :description "The name of more than one unit of this ingredient."}}
                               :resolve :mutation-add-ingredient}
             :add_equipment   {:type :Equipment
                               :description "Creates a new item of equipment."
                               :args {:name {:type (non-null String)}}
                               :resolve :mutation-add-equipment}}}

;; :mutations {:add-recipe nil
;;             :edit-recipe   nil
;;             :delete-recipe nil
;;             :add-steps      nil
;;             :edit-step     nil
;;             :delete-step   nil
;;             :add-ingredients nil
;;             :edit-ingredient nil
;;             :delete-ingredient nil
;;             :add-recipe-ingredients nil
;;             :edit-recipe-ingredient nil
;;             :delete-recipe-ingredient nil
;;             :add-step-ingredients nil
;;             :edit-step-ingredient nil
;;             :delete-step-ingredient nil
;;             :add-equipment nil
;;             :edit-equipment nil
;;             :delete-equipment nil
;;             :add-recipe-equipment nil
;;             :delete-recipe-equipment nil
;;             :add-conversions nil
;;             :edit-conversion nil
;;             :delete-conversion nil}